string FAKE_ROOM = "fake_room";
string FAKE_LIGHT = "fake_light";
string FAKE_PAINTING = "fake_painting";
string FAKE_TROPHY = "fake_trophy";
string FAKE_PLATFORM = "fake_platform";
string FAKE_CROWN = "fake_crown";
string FAKE_PEDESTAL = "fake_pedestal";

string MAGE_THUG = "mage_thug";
string MAGE_PRISON_CEILING = "mage_prison_ceiling";
string MAGE_POOL_FLOOR = "mage_pool_floor";

string DISPLAY_CABINET_LID1 = "display_cabinet_lid_1";
string DISPLAY_CABINET_LID2 = "display_cabinet_lid_2";

string POPUP_TO_MOSQUE = "popup_to_mosque";

// Latched door entities
string MOSQUE_OFFICE_LATCH = "mosque_office_latch";
string MOSQUE_OFFICE_DOOR = "atdm_mover_door_115";

string GATE_LATCH = "gate_latch1";
string GATE_DOOR = "atdm_mover_door_141";

string OFFICER_HOUSE_LATCH = "func_static_655";
string OFFICER_HOUSE_DOOR = "atdm_mover_door_43";
string OFFICER_HOUSE_DOOR2 = "atdm_mover_door_42";

void frob_mosque_sign()
{
    sys.trigger(sys.getEntity(POPUP_TO_MOSQUE));
}

void removeEntity(string entityName)
{
    sys.getEntity(entityName).remove();
}

void enterMagePrison(entity zone)
{
    removeEntity(FAKE_ROOM);
    removeEntity(FAKE_LIGHT);
    removeEntity(FAKE_PAINTING);
    removeEntity(FAKE_TROPHY);
    removeEntity(FAKE_CROWN);
    removeEntity(FAKE_PEDESTAL);

    sys.wait(2);

    sys.trigger(sys.getEntity(MAGE_THUG));
    sys.getEntity(MAGE_PRISON_CEILING).setSolid(1);
    sys.getEntity(MAGE_POOL_FLOOR).setSolid(1);
}

void alertMageThug()
{
    sys.println("alerting AI");
    sys.getEntity(MAGE_THUG).setAlertLevel(20);
}


void setJewelleryCaseFrobable(float frobable)
{
    sys.getEntity(DISPLAY_CABINET_LID1).setFrobable(frobable);
    sys.getEntity(DISPLAY_CABINET_LID2).setFrobable(frobable);
}

void setJewelleryCaseFrobableOn(entity zone)
{
    setJewelleryCaseFrobable(1);
}

void setJewelleryCaseFrobableOff(entity zone)
{
    setJewelleryCaseFrobable(0);
}

void removePrisoner(entity ent_target, entity triggerEntity, entity ent_callscriptfunction)
{
     string name = triggerEntity.getName();

     sys.println("triggerEntity name: " + name);

     if (name == "prisoner1")
     {
        triggerEntity.remove();
     }
}

// rotates and slides a door latch and unlocks the door
void unlockLatch(string latchName, string doorName, string door2Name, vector latchRotateAngle, float slideAngle, float slideDistance)
{
    entity latch = sys.getEntity(latchName);
    entity door = sys.getEntity(doorName);

    latch.rotateTo(latchRotateAngle);

    sys.waitFor(latch);

    latch.speed(12);
    latch.move(slideAngle, slideDistance);

    door.Unlock();

    // basically permanently disable the latch
    latch.setFrobable(0);

    // make the door frobable so it can be closed
    door.setFrobable(1);

    // support for double doorsa
    if (!door2Name == "")
    {
        sys.getEntity(door2Name).setFrobable(1);
    }
}

// Sets the frobability of the door latch and door.
// They will be the opposite of each other to make the latch easier to frob.
void setLatchFrobable(string latchName, string doorName, float frobable)
{
    // don't bother with this if the door has been opened
    if (sys.getEntity(doorName).IsLocked())
    {
        sys.getEntity(latchName).setFrobable(frobable);
        sys.getEntity(doorName).setFrobable(!frobable);
    }
}

/////////////////////////////////////
// Mosque Office door/latch controls
/////////////////////////////////////

void unlockMosqueOfficeDoor()
{
    unlockLatch(MOSQUE_OFFICE_LATCH, MOSQUE_OFFICE_DOOR, "", '0 0 90', EAST, 6);
}

void setLatchFrobableOn(entity zone)
{
    setLatchFrobable(MOSQUE_OFFICE_LATCH, MOSQUE_OFFICE_DOOR, 1);
}

void setLatchFrobableOff(entity zone)
{
    setLatchFrobable(MOSQUE_OFFICE_LATCH, MOSQUE_OFFICE_DOOR, 0);
}

/////////////////////////////////////
// Officer House door/latch controls
/////////////////////////////////////
void unlockOfficerDoor()
{
    unlockLatch(OFFICER_HOUSE_LATCH, OFFICER_HOUSE_DOOR, OFFICER_HOUSE_DOOR2, '-90 0 0', SOUTH, 4);
}

void enterOfficerLounge(entity zone)
{
    setLatchFrobable(OFFICER_HOUSE_LATCH, OFFICER_HOUSE_DOOR, 1);
    setLatchFrobable(OFFICER_HOUSE_LATCH, OFFICER_HOUSE_DOOR2, 1);
}

void exitOfficerLounge(entity zone)
{
    setLatchFrobable(OFFICER_HOUSE_LATCH, OFFICER_HOUSE_DOOR, 0);
    setLatchFrobable(OFFICER_HOUSE_LATCH, OFFICER_HOUSE_DOOR2, 0);
}

/////////////////////////////////////
// Harbour Wall door/latch controls
/////////////////////////////////////
void enterHarbourWallCentre(entity zone)
{
    setLatchFrobable(GATE_LATCH, GATE_DOOR, 1);
}

void exitHarbourWallCentre(entity zone)
{
    setLatchFrobable(GATE_LATCH, GATE_DOOR, 0);
}

void unlockGateDoor()
{
    unlockLatch(GATE_LATCH, GATE_DOOR, "", '-90 0 0', SOUTH, 6);
}

void waiterBark()
{
    $cafeWaiter.bark("snd_greeting");
}

void frobBottle(entity bottle)
{
    sys.trigger($trigger_count_bottle_message);
    frob_item(bottle);
}

// main - keep at bottom
void main()
{
    sys.waitFrame();
}